
/**
 * Instantiate the local variables for this controller
 */
var _args = arguments[0] || {}, // Any passed in arguments will fall into this property
	App = Alloy.Globals.App,  // reference to the APP singleton object
	userLong,
    userLat,
	calamiteiten = null,  // Array placeholder for all information
	indexes = [];  // Array placeholder for the ListView Index (used by iOS only);
	


$.kaart.addEventListener("focus",function(e){
    	
        getMap();
       getLocation();
});

/*
if(!Titanium.Geolocation.hasLocationPermissions(Titanium.Geolocation.AUTHORIZATION_ALWAYS)) {
Titanium.Geolocation.requestLocationPermissions(Titanium.Geolocation.AUTHORIZATION_ALWAYS, function(result){
		if(!result.success) {
			//no location permissions flow triggers
		} else {
			//do something
		
		}
	});
}

*/



function getLocation() {
	 
	if(Ti.Network.online){
       // Ti.Geolocation.purpose = "Receive User Location";
        Titanium.Geolocation.getCurrentPosition(function(e){


            if (!e.success || e.error) 
            {
                alert('Could not find the device location');
                return;
            }
            userLong = e.coords.longitude;
            userLat = e.coords.latitude;
        });
    }else{
        alert("Er is een Internet connectie nodig om uw locatie te bepalen");
    }	
             
}  




function getMap() {
	
	var wrapperView    = Ti.UI.createView(); // Full screen
var containerView  = Ti.UI.createView({  // Set height appropriately
    backgroundColor : '#FFF',    
    top: 0
});
	
	    userLong;
        userLat;
		kilometer = 1000;
		latDelta = 0.1;
        longDelta = 0.1;

	
	
	var Map = require('ti.map');
	var mapview = Map.createView({
    mapType: Map.NORMAL_TYPE,
    region: {latitude: userLat, longitude: userLong,
            latitudeDelta: latDelta, longitudeDelta: longDelta},
    animate:true,
    regionFit:true,
    userLocation:true,
    top:0,
    bottom:0
});




	/**
	 * Access the FileSystem Object to read in the information from a flat file (lib/userData/data.js)
	 * DOCS: http://docs.appcelerator.com/platform/latest/#!/api/Titanium.Filesystem
	 */
	var file = Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory + "userData/calamiteiten.json"); 
	
	/**
	 * Populate the information variable from the file this call returns an array
	 */
	calamiteiten = JSON.parse(file.read().text).calamiteiten; 
	
	var annotations = [];
	 
	 for(var i=0;i<calamiteiten.length;i++){
                          Ti.API.info('Calamiteiten: ' + calamiteiten[i].calamiteitTitel);                        
        var pin  = Map.createAnnotation({
        latitude: calamiteiten[i].latitude,
        longitude: calamiteiten[i].longitude,
        customView: Alloy.createController("annotation", {image: calamiteiten[i].photo}).getView(),
        title: calamiteiten[i].calamiteitTitel,
        animate:true,
    });

   
     annotations[i] = pin;

mapview.addAnnotation(annotations[i]);  // adds annotations    
                          
                      }
  
var circle = Map.createCircle({
    center: { latitude: userLat, longitude: userLong },
    radius: kilometer, //1km = 1000
    fillColor: "#40e28833",
      strokeColor:"#00FFFFFF",
 
});
mapview.addCircle(circle);
containerView.add(mapview);
wrapperView.add(containerView); 
$.kaart.add(wrapperView);
}







